version: 2.1

orbs:
  aws-assume: airswap/assume-role@0.2.0
  aws-s3: circleci/aws-s3@1.0.13
  aws-ecr: circleci/aws-ecr@6.5.0
  terraform: circleci/terraform@2.0.2

machine:
  environment:
    QA_WS_API_KEY: ${QA_WS_API_KEY}
    
executors:
  python-builder:
    docker:
      - image: eu.gcr.io/${GCP_PROJECT}/python-builder-lambda:latest
        auth:
          username: _json_key
          password: ${GCLOUD_SERVICE_KEY}
  aws-cli:
    docker:
      - image: eu.gcr.io/core-platform-1/awscli:latest
        auth:
          username: _json_key
          password: ${GCLOUD_SERVICE_KEY}

jobs:
  build-function:
    executor: python-builder
    steps:
      - checkout

      - run:
          name: lint
          command: make lint

      - run:
          name: SonarCloud - trigger code analysis
          command: |
            sonar-scanner -Dsonar.host.url=https://sonarcloud.io

  aws-publish:
    executor: aws-cli
    steps:
      - checkout

      - aws-assume/assume-role:
          role-name: "CytoraCircleciAccess"
          account-id: "615147210125"

      - aws-ecr/build-and-push-image:
          repo: "cytora-platform-eu-west-1-risk-stream"
          tag: "${CIRCLE_BUILD_NUM}"
          region: AWS_REGION
          dockerfile: Dockerfile
          setup-remote-docker: true

      - run:
          name: "export environment variable"
          command: |
            echo -n "${CIRCLE_BUILD_NUM}" > /tmp/build_num

      - persist_to_workspace:
          root: /tmp/
          paths:
            - build_num

  build-infra:
    docker:
      - image: eu.gcr.io/core-platform-1/terraform-runtime:latest
        auth:
          username: _json_key
          password: ${GCLOUD_SERVICE_KEY}

    steps:
      - attach_workspace:
          at: /tmp/build_num
      - checkout

      - aws-assume/assume-role:
          role-name: "CytoraCircleciAccess"
          account-id: "615147210125"

      - run:
          name: make dirs & get latest files
          command: |
            mkdir terraform-service-templates
            mkdir terraform-modules
            SERVICE_TEMPLATE_KEY=$(aws s3 ls cytora-platform-eu-west-1-terraform-service-templates-versions --recursive | sort | tail -n 1 | awk '{print $4}')
            echo "export SERVICE_TEMPLATE_KEY=$SERVICE_TEMPLATE_KEY" >> $BASH_ENV
            TERRAFORM_MODULES_KEY=$(aws s3 ls cytora-platform-eu-west-1-terraform-modules-versions --recursive | sort | tail -n 1 | awk '{print $4}')
            echo "export TERRAFORM_MODULES_KEY=$TERRAFORM_MODULES_KEY" >> $BASH_ENV

      - run:
          name: "get ECR build number"
          command: |
            ECR_BUILD=`cat /tmp/build_num/build_num`
            echo "export ECR_BUILD_VERSION=$ECR_BUILD" >> $BASH_ENV

      - aws-s3/copy:
          from: "s3://cytora-platform-eu-west-1-terraform-service-templates-versions/${SERVICE_TEMPLATE_KEY}"
          to: ./terraform-service-templates
          aws-region: AWS_REGION

      - run:
          name: unzip terraform templates
          command: |
            cd terraform-service-templates
            tar -xvf ${SERVICE_TEMPLATE_KEY}

      - aws-s3/copy:
          from: "s3://cytora-platform-eu-west-1-terraform-modules-versions/${TERRAFORM_MODULES_KEY}"
          to: ./terraform-modules
          aws-region: AWS_REGION

      - run:
          name: unzip terraform modules
          command: |
            cd terraform-modules
            tar -xvf ${TERRAFORM_MODULES_KEY}

      - aws-assume/assume-role:
          role-name: "CytoraCircleciAccess"
          account-id: "897727315233"

      - terraform/init:
          backend: true
          backend_config_file: /terraform-service-templates/services/${SERVICE}/function-http/init.tfvars

      - terraform/plan:
          backend_config_file: init.tfvars
          path: terraform-service-templates/services/${SERVICE}/function-http
          var_file: terraform.tfvars,common.tfvars
          var: image_tag="${ECR_BUILD_VERSION}",service=${SERVICE},region=${AWS_REGION},account_id=${AWS_ACCOUNT_ID},build_number="${ECR_BUILD_VERSION}"
          workspace: ${SERVICE}-function-http

      - terraform/apply:
          backend_config_file: init.tfvars
          path: terraform-service-templates/services/${SERVICE}/function-http
          var_file: terraform.tfvars,common.tfvars
          var: image_tag="${ECR_BUILD_VERSION}",service=${SERVICE},region=${AWS_REGION},account_id=${AWS_ACCOUNT_ID},build_number="${ECR_BUILD_VERSION}"
          workspace: ${SERVICE}-function-http

workflows:
  version: 2
  build_and_push:
    jobs:
      - aws-publish
      - build-infra:
          requires:
            - aws-publish
          filters:
            branches:
              only:
                - main
                - acceptance-test-fix
